package grob

// Code generated by go-plotly/generator. DO NOT EDIT

import (
	"encoding/json"
	"errors"
	"github.com/MetalBlueberry/go-plotly/pkg/types"
)

type unmarshalType struct {
	Type types.TraceType `json:"type,omitempty"`
}

// UnmarshalTrace decodes an array of bytes into a Trace interface.
func UnmarshalTrace(data []byte) (types.Trace,error) {
	traceType := unmarshalType{}
	err := json.Unmarshal(data, &traceType)
	if err != nil {
		return nil, err
	}
	switch traceType.Type {
{{- range $name := .Types }}
    case TraceType{{ $name }}:
        trace := &{{ $name }}{}
        err = json.Unmarshal(data,trace)
        if err != nil {
            return nil, err
        }
        return trace, nil
{{- end }}
    default:
        return nil, errors.New("Trace Type is not registered")
	}
}